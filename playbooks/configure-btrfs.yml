---
- name: Configure BTRFS
  hosts: "*"
  vars:
    luks_volume: /dev/mapper/root

  tasks:
    - name: Get stat of '{{ luks_volume }}'
      ansible.builtin.stat:
        path: '{{ luks_volume }}'
      register: root
      become: true

    - name: Get the UUID of '{{ luks_volume }}'
      ansible.builtin.shell:
        # boom if no uuid of volume
        cmd: blkid | grep "{{ luks_volume }}" | awk -F '"' '{ print $2 }' | egrep '^[0-9a-f-]{36}$'
      register: luks_volume_uuid
      changed_when: false
      become: true

    - name: Mount '{{ luks_volume }}' for work with BTRFS subvolumes
      ansible.posix.mount:
        path: /mnt
        src: '{{ luks_volume }}'
        state: mounted
        fstype: btrfs
      become: true

    - name: Create '@docker' subvolume
      ansible.builtin.command:
        cmd: btrfs subvolume create /mnt/@docker
        creates: /mnt/@docker
      become: true

    - name: Get ID of '@docker' subvolume
      ansible.builtin.shell:
        cmd: btrfs subvolume show /mnt/@docker | grep "Subvolume ID:" | awk '{ print $3 }' | egrep '^[0-9]+$'
      become: true
      changed_when: false
      register: docker

    - name: Add '@docker' subvolume into '/etc/fstab'
      ansible.posix.mount:
        path: /var/lib/docker
        src: UUID={{ luks_volume_uuid.stdout }}
        fstype: btrfs
        state: mounted
        opts: rw,relatime,ssd,space_cache=v2,subvolid={{ docker.stdout }},subvol=/@docker
      become: true
      when: luks_volume_uuid.rc == 0 and docker.rc == 0

    - name: Umount '{{ luks_volume }}' drive
      ansible.posix.mount:
        path: /mnt
        state: absent
        fstype: btrfs
      become: true
